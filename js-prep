<div id="main-content" class="wiki-content" data-ol-has-click-handler="">
                           
        <p>Competency to evaluate ( G9 ) :&nbsp;<a href="https://docs.google.com/spreadsheets/d/1Xl6b6govK_I3TChy1Uz0eG2zenx_SfYvmhE8qnENuyc/edit#gid=1334623006&amp;range=G:G" class="external-link" rel="nofollow">https://docs.google.com/spreadsheets/d/1Xl6b6govK_I3TChy1Uz0eG2zenx_SfYvmhE8qnENuyc/edit#gid=1334623006&amp;range=G:G</a></p><p>Time duration: 1hour</p><p>Years of exp. = 3-4+ years</p><p><br></p><h3 id="UIEngineerIIInterview-UITechRound">UI Tech Round</h3><p>HTML, CSS = 5-10 mins</p><ul style="list-style-type: square;"><li>Use of semantic elements? Challenges ( if any )</li><li>Accessibility.&nbsp;</li><li>Implement a small CSS animation. ( eg. toggling of up/down arrow like in an accordion )</li><li>Why to use Opacity &amp; transform only for animation and not other properties.</li><li>Media queries. How do you go about making it mobile first. ( Expected tp know about em, rem, vh/vw )</li><li>(optional) pre compilers benefits and tradeoffs.</li><li>box model?</li><li>Specificity&nbsp;</li></ul><p><br>JS = 20-30 mins</p><ul style="list-style-type: square;"><li>Ice breaker - Basic JS fundamentals/discussions. Threading, Reason of popularity, etc.&nbsp;</li><li>JS Scoping ( <a href="https://scotch.io/tutorials/understanding-scope-in-javascript" class="external-link" rel="nofollow">Scoping</a>&nbsp;)</li><li>Async JS - event loop, Promises, setTimeout, requestAnimationFrame</li><li>this, Class, Prototype</li></ul><p><br></p><p>Web / Browser/ Network = 10-15mins</p><ul style="list-style-type: square;"><li>Dev tools - Network tab, Debugger breakpoints, perf tests, Lighthouse&nbsp;</li><li>Debugging skills&nbsp;</li><li>Perf tests</li><li>How they work - specific questions</li><li>DOM cycle. How to avoid reflow.</li><li>Storage - Cookies, LS, SS, index db. When to use what? Eg. Is storing access token in LS a good idea? Talk about security aspects from here. ( IDOR, XSS, CORS )</li></ul><p><br></p><p>Framework Knowledge = 5 mins</p><ul style="list-style-type: square;"><li>Architecture and underlining concepts behind React/Angular/Redux ( based on profile ).</li><li>When to use what<br><br></li></ul><p>Miscellaneous&nbsp;</p><ul><li>Situation : How would you render pages with images. ( say start with images.google.com ).<ul><li>can check for search optimisations techniques like debouncing, limiting queries based on keystrokes.</li><li>image optimisations based on user net speed/device ( use img srcset attribute )</li><li>pagination techniques.</li></ul></li><li>Bundling: How code is shipped to browsers. Webpack/Rollup, Babel usage</li><li>Node JS env.</li><li>package.json vs package-lock</li><li>PWA&nbsp;</li></ul><p><br></p>

                
        
    
        </div>
